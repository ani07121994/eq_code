
package ap.quantas.com.bamUpdateWebService;

import java.net.Authenticator;
import java.net.MalformedURLException;
import java.net.PasswordAuthentication;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import ap.quantas.com.PropertyLoader;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
//psp-@WebServiceClient(name = "DataObjectOperationsByID", targetNamespace = "http://xmlns.oracle.com/bam", wsdlLocation = "http://eqdr-soa-ap1.qantas.com.au:17031/OracleBAMWS/WebServices/DataObjectOperationsByID?WSDL")

@WebServiceClient(name = "DataObjectOperationsByID", targetNamespace = "http://xmlns.oracle.com/bam", wsdlLocation = "http://eqdr-soa-ap1.qantas.com.au:17031/OracleBAMWS/WebServices/DataObjectOperationsByID?WSDL")
public class DataObjectOperationsByID_Service
    extends Service
{

    private final static URL DATAOBJECTOPERATIONSBYID_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(ap.quantas.com.bamUpdateWebService.DataObjectOperationsByID_Service.class.getName());

    static {
        URL url = null;
        try {
        	
        	
            Authenticator myAuth = new Authenticator() 
            {
                @Override
                protected PasswordAuthentication getPasswordAuthentication()
                {
                    return new PasswordAuthentication(
                    			PropertyLoader.getInstance().getProperty("BAM_DATA_OBJECT_SERVICE_USERNAME_12C").toString(),
                    			PropertyLoader.getInstance().getProperty("BAM_DATA_OBJECT_SERVICE_PASSWORD_12C").toString().toCharArray()
                    		);
                }
            };

            Authenticator.setDefault(myAuth);
			
            URL baseUrl;
            baseUrl = ap.quantas.com.bamUpdateWebService.DataObjectOperationsByID_Service.class.getResource(".");
            url = new URL(baseUrl, PropertyLoader.getInstance().getProperty("BAM_DATA_OBJECT_SERVICE_WSDL_12C").toString());                          
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: '"+PropertyLoader.getInstance().getProperty("BAM_DATA_OBJECT_SERVICE_WSDL_12C").toString()+"', retrying as a local file");
            logger.warning(e.getMessage());
        }
        DATAOBJECTOPERATIONSBYID_WSDL_LOCATION = url;
    }

    public DataObjectOperationsByID_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DataObjectOperationsByID_Service() {
        super(DATAOBJECTOPERATIONSBYID_WSDL_LOCATION, new QName("http://xmlns.oracle.com/bam", "DataObjectOperationsByID"));
    }

    /**
     * 
     * @return
     *     returns DataObjectOperationsByID
     */
    @WebEndpoint(name = "DataObjectOperationsByID")
    public DataObjectOperationsByID getDataObjectOperationsByID() {
        return super.getPort(new QName("http://xmlns.oracle.com/bam", "DataObjectOperationsByID"), DataObjectOperationsByID.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DataObjectOperationsByID
     */
    @WebEndpoint(name = "DataObjectOperationsByID")
    public DataObjectOperationsByID getDataObjectOperationsByID(WebServiceFeature... features) {
        return super.getPort(new QName("http://xmlns.oracle.com/bam", "DataObjectOperationsByID"), DataObjectOperationsByID.class, features);
    }

}
