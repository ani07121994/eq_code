package model;

import java.math.BigDecimal;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 11 11:13:06 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CertifierNameVO_ActiveOnlyRecordsRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        FirstName {
            public Object get(CertifierNameVO_ActiveOnlyRecordsRowImpl obj) {
                return obj.getFirstName();
            }

            public void put(CertifierNameVO_ActiveOnlyRecordsRowImpl obj,
                            Object value) {
                obj.setFirstName((String)value);
            }
        }
        ,
        MiddleNames {
            public Object get(CertifierNameVO_ActiveOnlyRecordsRowImpl obj) {
                return obj.getMiddleNames();
            }

            public void put(CertifierNameVO_ActiveOnlyRecordsRowImpl obj,
                            Object value) {
                obj.setMiddleNames((String)value);
            }
        }
        ,
        LastName {
            public Object get(CertifierNameVO_ActiveOnlyRecordsRowImpl obj) {
                return obj.getLastName();
            }

            public void put(CertifierNameVO_ActiveOnlyRecordsRowImpl obj,
                            Object value) {
                obj.setLastName((String)value);
            }
        }
        ,
        EmployeeNumber {
            public Object get(CertifierNameVO_ActiveOnlyRecordsRowImpl obj) {
                return obj.getEmployeeNumber();
            }

            public void put(CertifierNameVO_ActiveOnlyRecordsRowImpl obj,
                            Object value) {
                obj.setEmployeeNumber((String)value);
            }
        }
        ,
        EmailAddress {
            public Object get(CertifierNameVO_ActiveOnlyRecordsRowImpl obj) {
                return obj.getEmailAddress();
            }

            public void put(CertifierNameVO_ActiveOnlyRecordsRowImpl obj,
                            Object value) {
                obj.setEmailAddress((String)value);
            }
        }
        ,
        Department {
            public Object get(CertifierNameVO_ActiveOnlyRecordsRowImpl obj) {
                return obj.getDepartment();
            }

            public void put(CertifierNameVO_ActiveOnlyRecordsRowImpl obj,
                            Object value) {
                obj.setDepartment((String)value);
            }
        }
        ,
        PersonId {
            public Object get(CertifierNameVO_ActiveOnlyRecordsRowImpl obj) {
                return obj.getPersonId();
            }

            public void put(CertifierNameVO_ActiveOnlyRecordsRowImpl obj,
                            Object value) {
                obj.setPersonId((BigDecimal)value);
            }
        }
        ,
        Conname {
            public Object get(CertifierNameVO_ActiveOnlyRecordsRowImpl obj) {
                return obj.getConname();
            }

            public void put(CertifierNameVO_ActiveOnlyRecordsRowImpl obj,
                            Object value) {
                obj.setConname((String)value);
            }
        }
        ,
        CurrentEmployeeFlag {
            public Object get(CertifierNameVO_ActiveOnlyRecordsRowImpl obj) {
                return obj.getCurrentEmployeeFlag();
            }

            public void put(CertifierNameVO_ActiveOnlyRecordsRowImpl obj,
                            Object value) {
                obj.setCurrentEmployeeFlag((String)value);
            }
        }
        ,
        OperatingUnit {
            public Object get(CertifierNameVO_ActiveOnlyRecordsRowImpl obj) {
                return obj.getOperatingUnit();
            }

            public void put(CertifierNameVO_ActiveOnlyRecordsRowImpl obj,
                            Object value) {
                obj.setOperatingUnit((String)value);
            }
        }
        ,
        JetstarGroup {
            public Object get(CertifierNameVO_ActiveOnlyRecordsRowImpl obj) {
                return obj.getJetstarGroup();
            }

            public void put(CertifierNameVO_ActiveOnlyRecordsRowImpl obj,
                            Object value) {
                obj.setJetstarGroup((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(CertifierNameVO_ActiveOnlyRecordsRowImpl object);

        public abstract void put(CertifierNameVO_ActiveOnlyRecordsRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int MIDDLENAMES = AttributesEnum.MiddleNames.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int EMPLOYEENUMBER = AttributesEnum.EmployeeNumber.index();
    public static final int EMAILADDRESS = AttributesEnum.EmailAddress.index();
    public static final int DEPARTMENT = AttributesEnum.Department.index();
    public static final int PERSONID = AttributesEnum.PersonId.index();
    public static final int CONNAME = AttributesEnum.Conname.index();
    public static final int CURRENTEMPLOYEEFLAG = AttributesEnum.CurrentEmployeeFlag.index();
    public static final int OPERATINGUNIT = AttributesEnum.OperatingUnit.index();
    public static final int JETSTARGROUP = AttributesEnum.JetstarGroup.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CertifierNameVO_ActiveOnlyRecordsRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute FirstName.
     * @return the FirstName
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FirstName.
     * @param value value to set the  FirstName
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MiddleNames.
     * @return the MiddleNames
     */
    public String getMiddleNames() {
        return (String) getAttributeInternal(MIDDLENAMES);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MiddleNames.
     * @param value value to set the  MiddleNames
     */
    public void setMiddleNames(String value) {
        setAttributeInternal(MIDDLENAMES, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LastName.
     * @return the LastName
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastName.
     * @param value value to set the  LastName
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EmployeeNumber.
     * @return the EmployeeNumber
     */
    public String getEmployeeNumber() {
        return (String) getAttributeInternal(EMPLOYEENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EmployeeNumber.
     * @param value value to set the  EmployeeNumber
     */
    public void setEmployeeNumber(String value) {
        setAttributeInternal(EMPLOYEENUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EmailAddress.
     * @return the EmailAddress
     */
    public String getEmailAddress() {
        return (String) getAttributeInternal(EMAILADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EmailAddress.
     * @param value value to set the  EmailAddress
     */
    public void setEmailAddress(String value) {
        setAttributeInternal(EMAILADDRESS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Department.
     * @return the Department
     */
    public String getDepartment() {
        return (String) getAttributeInternal(DEPARTMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Department.
     * @param value value to set the  Department
     */
    public void setDepartment(String value) {
        setAttributeInternal(DEPARTMENT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PersonId.
     * @return the PersonId
     */
    public BigDecimal getPersonId() {
        return (BigDecimal) getAttributeInternal(PERSONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PersonId.
     * @param value value to set the  PersonId
     */
    public void setPersonId(BigDecimal value) {
        setAttributeInternal(PERSONID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Conname.
     * @return the Conname
     */
    public String getConname() {
        return (String) getAttributeInternal(CONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Conname.
     * @param value value to set the  Conname
     */
    public void setConname(String value) {
        setAttributeInternal(CONNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrentEmployeeFlag.
     * @return the CurrentEmployeeFlag
     */
    public String getCurrentEmployeeFlag() {
        return (String) getAttributeInternal(CURRENTEMPLOYEEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrentEmployeeFlag.
     * @param value value to set the  CurrentEmployeeFlag
     */
    public void setCurrentEmployeeFlag(String value) {
        setAttributeInternal(CURRENTEMPLOYEEFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OperatingUnit.
     * @return the OperatingUnit
     */
    public String getOperatingUnit() {
        return (String) getAttributeInternal(OPERATINGUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OperatingUnit.
     * @param value value to set the  OperatingUnit
     */
    public void setOperatingUnit(String value) {
        setAttributeInternal(OPERATINGUNIT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute JetstarGroup.
     * @return the JetstarGroup
     */
    public String getJetstarGroup() {
        return (String) getAttributeInternal(JETSTARGROUP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute JetstarGroup.
     * @param value value to set the  JetstarGroup
     */
    public void setJetstarGroup(String value) {
        setAttributeInternal(JETSTARGROUP, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
