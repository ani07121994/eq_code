
package ap.quantas.com.imaging.documentContentService;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "DocumentContentService", targetNamespace = "http://imaging.oracle/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DocumentContentService {


    /**
     * 
     * @param documentId
     * @return
     *     returns byte[]
     * @throws ImagingException
     */
    @WebMethod
    @WebResult(name = "documentData", targetNamespace = "")
    @RequestWrapper(localName = "retrieve", targetNamespace = "http://imaging.oracle/", className = "ap.quantas.com.imaging.documentContentService.Retrieve")
    @ResponseWrapper(localName = "retrieveResponse", targetNamespace = "http://imaging.oracle/", className = "ap.quantas.com.imaging.documentContentService.RetrieveResponse")
    public byte[] retrieve(
        @WebParam(name = "documentId", targetNamespace = "")
        String documentId)
        throws ImagingException
    ;

    /**
     * 
     * @param pages
     * @param outputType
     * @param preserveColor
     * @param withAnnotations
     * @param documentId
     * @return
     *     returns ap.quantas.com.imaging.documentContentService.Rendition
     * @throws ImagingException
     */
    @WebMethod
    @WebResult(name = "rendition", targetNamespace = "")
    @RequestWrapper(localName = "retrieveRendition", targetNamespace = "http://imaging.oracle/", className = "ap.quantas.com.imaging.documentContentService.RetrieveRendition")
    @ResponseWrapper(localName = "retrieveRenditionResponse", targetNamespace = "http://imaging.oracle/", className = "ap.quantas.com.imaging.documentContentService.RetrieveRenditionResponse")
    public Rendition retrieveRendition(
        @WebParam(name = "documentId", targetNamespace = "")
        String documentId,
        @WebParam(name = "withAnnotations", targetNamespace = "")
        boolean withAnnotations,
        @WebParam(name = "preserveColor", targetNamespace = "")
        boolean preserveColor,
        @WebParam(name = "outputType", targetNamespace = "")
        RenditionOutput outputType,
        @WebParam(name = "pages", targetNamespace = "")
        List<Integer> pages)
        throws ImagingException
    ;

    /**
     * 
     * @param versionId
     * @param documentId
     * @param options
     * @return
     *     returns ap.quantas.com.imaging.documentContentService.RenderResult
     * @throws ImagingException
     */
    @WebMethod
    @WebResult(name = "renderResult", targetNamespace = "")
    @RequestWrapper(localName = "retrieveVersionPage", targetNamespace = "http://imaging.oracle/", className = "ap.quantas.com.imaging.documentContentService.RetrieveVersionPage")
    @ResponseWrapper(localName = "retrieveVersionPageResponse", targetNamespace = "http://imaging.oracle/", className = "ap.quantas.com.imaging.documentContentService.RetrieveVersionPageResponse")
    public RenderResult retrieveVersionPage(
        @WebParam(name = "documentId", targetNamespace = "")
        String documentId,
        @WebParam(name = "versionId", targetNamespace = "")
        long versionId,
        @WebParam(name = "options", targetNamespace = "")
        RenderOptions options)
        throws ImagingException
    ;

    /**
     * 
     * @param fileName
     * @param data
     * @return
     *     returns java.lang.String
     * @throws ImagingException
     */
    @WebMethod
    @WebResult(name = "uploadToken", targetNamespace = "")
    @RequestWrapper(localName = "uploadDocument", targetNamespace = "http://imaging.oracle/", className = "ap.quantas.com.imaging.documentContentService.UploadDocument")
    @ResponseWrapper(localName = "uploadDocumentResponse", targetNamespace = "http://imaging.oracle/", className = "ap.quantas.com.imaging.documentContentService.UploadDocumentResponse")
    public String uploadDocument(
        @WebParam(name = "data", targetNamespace = "")
        byte[] data,
        @WebParam(name = "fileName", targetNamespace = "")
        String fileName)
        throws ImagingException
    ;

    /**
     * 
     * @param versionId
     * @param documentId
     * @return
     *     returns byte[]
     * @throws ImagingException
     */
    @WebMethod
    @WebResult(name = "documentData", targetNamespace = "")
    @RequestWrapper(localName = "retrieveVersion", targetNamespace = "http://imaging.oracle/", className = "ap.quantas.com.imaging.documentContentService.RetrieveVersion")
    @ResponseWrapper(localName = "retrieveVersionResponse", targetNamespace = "http://imaging.oracle/", className = "ap.quantas.com.imaging.documentContentService.RetrieveVersionResponse")
    public byte[] retrieveVersion(
        @WebParam(name = "documentId", targetNamespace = "")
        String documentId,
        @WebParam(name = "versionId", targetNamespace = "")
        long versionId)
        throws ImagingException
    ;

    /**
     * 
     * @param pages
     * @param outputType
     * @param preserveColor
     * @param versionId
     * @param withAnnotations
     * @param documentId
     * @return
     *     returns ap.quantas.com.imaging.documentContentService.Rendition
     * @throws ImagingException
     */
    @WebMethod
    @WebResult(name = "rendition", targetNamespace = "")
    @RequestWrapper(localName = "retrieveVersionRendition", targetNamespace = "http://imaging.oracle/", className = "ap.quantas.com.imaging.documentContentService.RetrieveVersionRendition")
    @ResponseWrapper(localName = "retrieveVersionRenditionResponse", targetNamespace = "http://imaging.oracle/", className = "ap.quantas.com.imaging.documentContentService.RetrieveVersionRenditionResponse")
    public Rendition retrieveVersionRendition(
        @WebParam(name = "documentId", targetNamespace = "")
        String documentId,
        @WebParam(name = "versionId", targetNamespace = "")
        long versionId,
        @WebParam(name = "withAnnotations", targetNamespace = "")
        boolean withAnnotations,
        @WebParam(name = "preserveColor", targetNamespace = "")
        boolean preserveColor,
        @WebParam(name = "outputType", targetNamespace = "")
        RenditionOutput outputType,
        @WebParam(name = "pages", targetNamespace = "")
        List<Integer> pages)
        throws ImagingException
    ;

    /**
     * 
     * @param documentId
     * @param options
     * @return
     *     returns ap.quantas.com.imaging.documentContentService.RenderResult
     * @throws ImagingException
     */
    @WebMethod
    @WebResult(name = "renderResult", targetNamespace = "")
    @RequestWrapper(localName = "retrievePage", targetNamespace = "http://imaging.oracle/", className = "ap.quantas.com.imaging.documentContentService.RetrievePage")
    @ResponseWrapper(localName = "retrievePageResponse", targetNamespace = "http://imaging.oracle/", className = "ap.quantas.com.imaging.documentContentService.RetrievePageResponse")
    public RenderResult retrievePage(
        @WebParam(name = "documentId", targetNamespace = "")
        String documentId,
        @WebParam(name = "options", targetNamespace = "")
        RenderOptions options)
        throws ImagingException
    ;

}
