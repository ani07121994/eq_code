
package ap.quantas.com.imaging.documentUpdate;

import ap.quantas.com.Utility;


import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
//same wsdl for dev n sit--@WebServiceClient(name = "DocumentService", targetNamespace = "http://imaging.oracle/", wsdlLocation = "http://eqdev-capture1.qantas.com.au:19000/imaging/ws/DocumentService?wsdl")
@WebServiceClient(name = "DocumentService", targetNamespace = "http://imaging.oracle/", wsdlLocation = "http://eqprod-capture1:16033/imaging/ws/DocumentService?wsdl")
public class DocumentService_Service
    extends Service
{

    private final static URL DOCUMENTSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(ap.quantas.com.imaging.documentUpdate.DocumentService_Service.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = ap.quantas.com.imaging.documentUpdate.DocumentService_Service.class.getResource(".");
            url = new URL(baseUrl, Utility.resolveExpression("#{ApOperationBean.propertyLoader.properties['IMAGING_DOCUMENT_SERVICE_WSDL']}").toString());            
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: '" + Utility.resolveExpression("#{ApOperationBean.propertyLoader.properties['IMAGING_DOCUMENT_SERVICE_WSDL']}").toString() +"', retrying as a local file");
            logger.warning(e.getMessage());
        }
        catch (Exception e) {
                    System.out.println(e);
                }
        DOCUMENTSERVICE_WSDL_LOCATION = url;
    }

    public DocumentService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DocumentService_Service() {
        super(DOCUMENTSERVICE_WSDL_LOCATION, new QName("http://imaging.oracle/", "DocumentService"));
    }

    /**
     * 
     * @return
     *     returns DocumentService
     */
    @WebEndpoint(name = "DocumentServicePort")
    public DocumentService getDocumentServicePort() {
        return super.getPort(new QName("http://imaging.oracle/", "DocumentServicePort"), DocumentService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DocumentService
     */
    @WebEndpoint(name = "DocumentServicePort")
    public DocumentService getDocumentServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://imaging.oracle/", "DocumentServicePort"), DocumentService.class, features);
    }

}
